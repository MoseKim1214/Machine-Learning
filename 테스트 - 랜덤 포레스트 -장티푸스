import os
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split

os.getcwd()

data = pd.read_excel("./인공지능/2001 ~ 2019 월별 날씨 + 전염병 데이터 - 장티푸스(날씨 데이터 선별).xlsx")
data.head()

nCar = data.shape[0]
nVar = data.shape[1]
print(nCar)
print(nVar)

data = data.drop(['일시'], axis=1)
data = data.drop(['장티푸스'], axis =1)

data.head()

after_mapping_target = data['Target'].apply(lambda x : x)

after_mapping_target

# 학습데이터와 평가데이터 분리

feature_columns = list(data.columns.difference(['Target']))
X = data[feature_columns]
y = after_mapping_target
train_x, test_x, train_y, test_y = train_test_split(X, y, test_size = 0.2, random_state = 42)
print(train_x.shape, test_x.shape, train_y.shape, test_y.shape)

# 학습데이터를 랜덤포레스트 모형에 적합 후 평가 데이터로 검증

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

# 학습데이터를 적합 

clf = RandomForestClassifier(n_estimators =20, max_depth=5,  #n_estimators : 트리의 개수, max_depth : 트리의 깊이
                            random_state=0)
clf.fit(train_x, train_y)

# 평가 데이터로 검증

predict1 = clf.predict(test_x)
print(accuracy_score(test_y,predict1))

# 정확도

predict1 = clf.predict(test_x)
print(accuracy_score(test_y,predict1))

## 트리의 개수와 깊이를 다르게 하여 검증

clf = RandomForestClassifier(n_estimators =100, max_depth=30,
                            random_state=0)
clf.fit(train_x, train_y)
predict1 = clf.predict(test_x)
print(accuracy_score(test_y,predict1))
